apiVersion: apps/v1
kind: Deployment
metadata:
  name: address-service-dev
  namespace: myjava-dev
spec:
  replicas: 1            # no of replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: address-service-dev
  template:
    metadata:
      name: app                        # NEW
      labels:
        app: address-service-dev
      annotations:
        # container name
        ad.datadoghq.com/address-service-dev.check_names: '["prometheus"]'
        ad.datadoghq.com/address-service-dev.init_configs: '[{}]'
        ad.datadoghq.com/address-service-dev.instances: |
          [
            {
              "prometheus_url": "http://%%host%%:8080/actuator/prometheus",
              "namespace": address-service-dev,
              "metrics": ["*"],
              "health_service_check": true,
              "max_returned_metrics": 2000
            }
          ]
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"

    spec:
      serviceAccountName: default
      imagePullSecrets:
        - name: myjavaacr-secret
      containers:
        - name: address-service-dev
          image: myjavaacr.azurecr.io/address-service:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 200m
              memory: 2Gi
          env:
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx1048m"
#            - name: DATADOG_ENDPOINT
#              valueFrom:
#                fieldRef:
#                  fieldPath: status.hostIP
#            - name: DD_AGENT_HOST
#              valueFrom:
#                fieldRef:
#                  fieldPath: status.hostIP
            - name: logLevel
              value: INFO
            - name: databaseName
              value: cosmosdb
#            - name: k8s_server_url
#              value: vault:athena-kv/data/kubernetes/pricing-dev-west-1/server#server
#            - name: databaseAccessKey
#              value: __databaseAccessKey__
#            - name: cosmosDatabaseUri
#              value: __cosmosDatabaseUri__
#            - name: maxpoolsize
#              value: '1'
            - name: KEY1
              valueFrom:
            - name: KEY2
              valueFrom:

          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
#            tcpSocket:
#              port: 8080
            initialDelaySeconds: 500
            periodSeconds: 20
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
#            tcpSocket:
#              port: 8080
            initialDelaySeconds: 530
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1

